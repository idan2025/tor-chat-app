name: Android Build

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/android/**'
      - '.github/workflows/android-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/android/**'
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install dependencies
      working-directory: ./packages/android
      run: npm install

    - name: Initialize React Native Android project
      working-directory: ./packages/android
      run: |
        if [ ! -d "android/app" ]; then
          echo "Android native project not found. Initializing React Native Android..."

          # Install React Native CLI globally
          npm install -g react-native-cli @react-native-community/cli

          # Initialize React Native project
          npx react-native init TorChatAndroid --skip-install --directory temp_project

          # Move the android directory to the correct location
          mv temp_project/android ./android

          # Clean up temporary files
          rm -rf temp_project

          # Update app name in android configuration
          sed -i 's/TorChatAndroid/TorChat/g' android/app/src/main/res/values/strings.xml || true

          echo "React Native Android project initialized successfully!"
        else
          echo "Android native project already exists, skipping initialization."
        fi

    - name: Create android assets directory
      working-directory: ./packages/android
      run: |
        mkdir -p android/app/src/main/assets
        echo "Android assets directory ready"

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      working-directory: ./packages/android/android
      run: chmod +x gradlew
      continue-on-error: true

    - name: Build Debug APK
      working-directory: ./packages/android/android
      run: ./gradlew assembleDebug
      continue-on-error: true

    - name: Build Release APK
      working-directory: ./packages/android/android
      run: ./gradlew assembleRelease
      env:
        SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
        SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      continue-on-error: true

    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: packages/android/android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
      continue-on-error: true

    - name: Upload Release APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: packages/android/android/app/build/outputs/apk/release/app-release.apk
        retention-days: 30
      continue-on-error: true

    - name: Upload APK to Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: packages/android/android/app/build/outputs/apk/release/app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true
