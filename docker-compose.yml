services:
  postgres:
    image: postgres:16-alpine
    container_name: torchat-postgres
    environment:
      POSTGRES_DB: torchat
      POSTGRES_USER: toruser
      POSTGRES_PASSWORD: torpass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U toruser -d torchat"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - torchat-network

  backend:
    image: idan2025/tor-chat-backend:latest
    container_name: torchat-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://toruser:torpass@postgres:5432/torchat
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: torchat
      DB_USER: toruser
      DB_PASSWORD: torpass
      JWT_SECRET: ${JWT_SECRET:-change-this-to-a-secure-random-string-min-32-chars}
      JWT_EXPIRES_IN: 24h
      BCRYPT_ROUNDS: 12
      TOR_SOCKS_HOST: tor
      TOR_SOCKS_PORT: 9050
      TOR_CONTROL_PORT: 9051
      HIDDEN_SERVICE_DIR: /var/lib/tor/hidden_service
      ENABLE_TOR: "true"
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 100
      ALLOWED_ORIGINS: http://localhost:5173,http://localhost:3001
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    volumes:
      - tor_data:/var/lib/tor/hidden_service
      - backend_logs:/app/packages/backend/logs
    networks:
      - torchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  tor:
    image: goldy/tor-hidden-service:latest
    container_name: torchat-tor
    depends_on:
      backend:
        condition: service_started
    environment:
      SERVICE1_TOR_SERVICE_HOSTS: "80:backend:3000"
      TOR_SOCKS_PORT: "0.0.0.0:9050"
    volumes:
      - tor_data:/var/lib/tor/hidden_service
    networks:
      - torchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9050"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 45s

  web:
    image: idan2025/tor-chat-web:latest
    container_name: torchat-web
    ports:
      - "5173:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      - torchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  tor_data:
    driver: local
  backend_logs:
    driver: local

networks:
  torchat-network:
    driver: bridge
