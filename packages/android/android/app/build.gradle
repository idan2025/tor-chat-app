apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"

/**
 * TOR Chat Android App - Build Configuration
 *
 * This configuration includes:
 * - React Native 0.73
 * - TOR integration (IPtProxy)
 * - Push notifications
 * - File/image pickers
 * - Crypto (libsodium)
 * - Vector icons
 */

import com.android.build.OutputFile

def projectRoot = rootProject.projectDir.parent
def reactNativeRoot = file("$projectRoot/../node_modules/react-native")

/**
 * Set this to true to enable ProGuard in release builds
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 * For example, to use the international variant, you can use:
 * `def jscFlavor = 'org.webkit:android-jsc-intl:+'`
 */
def jscFlavor = 'org.webkit:android-jsc:+'

android {
    ndkVersion rootProject.ext.ndkVersion
    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.torchat"
    defaultConfig {
        applicationId "com.torchat"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "0.1.2"

        // Permissions for TOR and file access
        manifestPlaceholders = [
            appName: "TOR Chat"
        ]

        // Enable multidex for large APK
        multiDexEnabled true

        // Vector drawable support
        vectorDrawables.useSupportLibrary = true
    }

    splits {
        abi {
            reset()
            enable true
            universalApk false
            include "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('SIGNING_STORE_FILE')) {
                storeFile file(SIGNING_STORE_FILE)
                storePassword SIGNING_STORE_PASSWORD
                keyAlias SIGNING_KEY_ALIAS
                keyPassword SIGNING_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    // Packaging options
    packagingOptions {
        resources {
            excludes += [
                '**/libsodium.so',
                'META-INF/DEPENDENCIES',
                'META-INF/LICENSE',
                'META-INF/LICENSE.txt',
                'META-INF/license.txt',
                'META-INF/NOTICE',
                'META-INF/NOTICE.txt',
                'META-INF/notice.txt',
                'META-INF/ASL2.0',
                'META-INF/*.kotlin_module'
            ]
        }
        pickFirst 'lib/x86/libc++_shared.so'
        pickFirst 'lib/x86_64/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    // Hermes engine configuration
    buildFeatures {
        buildConfig = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    // React Native
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:hermes-android")

    // JSC (JavaScript Core)
    implementation jscFlavor

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    // AndroidX Core
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.12.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "androidx.multidex:multidex:2.0.1"

    // TOR Integration (IPtProxy dependencies)
    // Note: react-native-iptproxy will handle Tor binaries
    implementation "info.guardianproject:tor-android:0.4.8.10"
    implementation "info.guardianproject:jtorctl:0.4.5.7"

    // Crypto (libsodium) for E2E encryption
    implementation "com.goterl:lazysodium-android:5.1.4@aar"
    implementation "net.java.dev.jna:jna:5.14.0@aar"

    // Image loading for react-native-fast-image
    implementation "com.github.bumptech.glide:glide:4.16.0"
    annotationProcessor "com.github.bumptech.glide:compiler:4.16.0"

    // Networking
    implementation "com.squareup.okhttp3:okhttp:4.12.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.12.0"

    // For react-native-vector-icons
    implementation "androidx.vectordrawable:vectordrawable:1.1.0"

    // For push notifications
    implementation "com.google.firebase:firebase-messaging:23.4.0"
    implementation "androidx.work:work-runtime:2.9.0"

    // React Native community packages
    debugImplementation("com.facebook.flipper:flipper:0.182.0")
    debugImplementation("com.facebook.flipper:flipper-network-plugin:0.182.0") {
        exclude group:'com.squareup.okhttp3', module:'okhttp'
    }
    debugImplementation("com.facebook.flipper:flipper-fresco-plugin:0.182.0")

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Apply React Native Gradle plugin
apply from: file("$reactNativeRoot/react.gradle")

// Hermes cleanup
def hermesEnabled = project.ext.react.get("enableHermes", true)
if (hermesEnabled) {
    configurations.all {
        resolutionStrategy {
            force 'com.facebook.react:hermes-android:0.73.0'
        }
    }
}

// Task to print build info
task printBuildInfo {
    doLast {
        println "========================================"
        println "TOR Chat Android Build Info"
        println "========================================"
        println "Application ID: ${android.defaultConfig.applicationId}"
        println "Version Code: ${android.defaultConfig.versionCode}"
        println "Version Name: ${android.defaultConfig.versionName}"
        println "Min SDK: ${android.defaultConfig.minSdkVersion}"
        println "Target SDK: ${android.defaultConfig.targetSdkVersion}"
        println "Compile SDK: ${android.compileSdkVersion}"
        println "Hermes Enabled: ${hermesEnabled}"
        println "========================================"
    }
}

// Run printBuildInfo before assembling
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug' || task.name == 'assembleRelease') {
        task.dependsOn printBuildInfo
    }
}
